== Requirements

To get started make sure your system has *Java JDK 6* or newer installed. Furthermore, http://redis.io/[Redis] is used for persistence. Either an installed or the Spring XD provided Redis instance can be used.

== Installation of Spring XD

=== Download Spring XD

Download http://www.springframework.org[spring-xd-1.0-M1.zip]

Unzip the distribution.

=== Installing Redis

If you have a running instance of Redis it can be used for Spring XD. By default Spring XD will try to use a Redis instance running on *localhost* using *port 6379*. However, you can overwrite these defaults using system properties:

* redis.hostname
* redis.port

If you don't have a pre-existing installation of Redis, you can use the Spring XD provided instance. 
----
$ cd redis/bin
$ ./install-redis
----

This will compile the redis source tar and add the Redis executables available under redis/bin

* redis-check-dump
* redis-sentinel
* redis-benchmark
* redis-cli
* redis-server

==== Redis on Windows

Presently, Spring XD does not ship Windows binaries for Redis. However, Microsoft http://blogs.msdn.com/b/interoperability/archive/2013/04/22/redis-on-windows-stable-and-reliable.aspx[is actively working] on supporting Redis on Windows. You can download Windows Redis binaries from:

https://github.com/MSOpenTech/redis/tree/2.6/bin/release 

==== Redis is not running

If you try to run Spring XD and Redis is NOT running, you will see the following exception:

----
Caused by: com.lambdaworks.redis.RedisException: Unable to connect
	at com.lambdaworks.redis.RedisClient.connect(RedisClient.java:176)
	at com.lambdaworks.redis.RedisClient.connectAsync(RedisClient.java:139)
	at org.springframework.data.redis.connection.lettuce.LettuceConnectionFactory.initConnection(LettuceConnectionFactory.java:108)
	at org.springframework.data.redis.connection.lettuce.LettuceConnectionFactory.afterPropertiesSet(LettuceConnectionFactory.java:86)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.invokeInitMethods(AbstractAutowireCapableBeanFactory.java:1547)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.initializeBean(AbstractAutowireCapableBeanFactory.java:1485)
	... 13 more
Caused by: java.net.ConnectException: Connection refused: localhost/127.0.0.1:6379
	at sun.nio.ch.SocketChannelImpl.checkConnect(Native Method)
	at sun.nio.ch.SocketChannelImpl.finishConnect(SocketChannelImpl.java:599)
	at org.jboss.netty.channel.socket.nio.NioClientBoss.connect(NioClientBoss.java:150)
	at org.jboss.netty.channel.socket.nio.NioClientBoss.processSelectedKeys(NioClientBoss.java:105)
	at org.jboss.netty.channel.socket.nio.NioClientBoss.process(NioClientBoss.java:79)
	at org.jboss.netty.channel.socket.nio.AbstractNioSelector.run(AbstractNioSelector.java:312)
	at org.jboss.netty.channel.socket.nio.NioClientBoss.run(NioClientBoss.java:42)
	at java.util.concurrent.ThreadPoolExecutor$Worker.runTask(ThreadPoolExecutor.java:895)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:918)
	at java.lang.Thread.run(Thread.java:680)
----

==== Starting Redis

```sh
$ redis-server
```

You should expect something like this:

[source,sh]
----
[35142] 01 May 14:36:28.939 # Warning: no config file specified, using the default config. In order to specify a config file use redis-server /path/to/redis.conf
[35142] 01 May 14:36:28.940 * Max number of open files set to 10032
                _._                                                  
           _.-``__ ''-._                                             
      _.-``    `.  `_.  ''-._           Redis 2.6.12 (00000000/0) 64 bit
  .-`` .-```.  ```\/    _.,_ ''-._                                   
 (    '      ,       .-`  | `,    )     Running in stand alone mode
 |`-._`-...-` __...-.``-._|'` _.-'|     Port: 6379
 |    `-._   `._    /     _.-'    |     PID: 35142
  `-._    `-._  `-./  _.-'    _.-'                                   
 |`-._`-._    `-.__.-'    _.-'_.-'|                                  
 |    `-._`-._        _.-'_.-'    |           http://redis.io        
  `-._    `-._`-.__.-'_.-'    _.-'                                   
 |`-._`-._    `-.__.-'    _.-'_.-'|                                  
 |    `-._`-._        _.-'_.-'    |                                  
  `-._    `-._`-.__.-'_.-'    _.-'                                   
      `-._    `-.__.-'    _.-'                                       
          `-._        _.-'                                           
              `-.__.-'                                               

[35142] 01 May 14:36:28.941 # Server started, Redis version 2.6.12
[35142] 01 May 14:36:28.941 * The server is now ready to accept connections on port 6379
----

=== Starting Spring XD

Spring XD consists of two servers

* XDAdmin - controls deployment of modules into containers
* XDContainer - execute modules


The most simple deployment is to launch an XD Container with an embedded XDAdmin from the +<xd-install-dir>/xd/bin+ directory

[source,sh]
----
xd/bin>$ ./xd-admin --embeddedContainer
----

You can start the +xd-container+ and +xd-admin+ servers individually

[source,sh]
----
xd/bin>$ ./xd-admin 
xd/bin>$ ./xd-container 
----

There is an additional configuration option to specify the location of the SpringXD install 

[source,sh]
----
xd/bin>$ ./xd-container --xdHomeDir <xd-install-directory>
----

Pass in the +--help+ option to see additional configuration properties.





