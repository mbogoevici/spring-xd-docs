=== Introduction
The Spring XD distributed runtime (DIRT) supports distribution of processing tasks across multiple nodes. See link:Running-Distributed-Mode[Running Distributed Mode] for information on running Spring XD in distributed mode. One option is to run these nodes on a Hadoop YARN cluster rather than on VMs or physical servers managed by you.

=== What do you need?
To begin with, you need to have access to a Hadoop cluster running a version based on Apache Hadoop 2.2.0 or later. This includes link:http://www.us.apache.org/dist/hadoop/common/hadoop-2.2.0/[Apache Hadoop 2.2.0], link:http://www.gopivotal.com/big-data/pivotal-hd[Pivotal HD 2.0], link:http://hortonworks.com/hdp/[Hortonworks HDP 2.1] and link:http://www.cloudera.com/content/cloudera/en/products-and-services/cloudera-express.html[Cloudera CDH5].

You need a supported transport, see link:Running-Distributed-Mode[Running Distributed Mode] for installation of Redis or Rabbit MQ. Spring XD on YARN currently uses Redis as the default data transport.

You also need Zookeeper running. If your Hadoop cluster doesn't have Zookeeper installed you need to install and run it specifically for Spring XD. See the link:Running-Distributed-Mode#setting-up-zookeeper[Setting up ZooKeeper] section of the "Running Distributed Mode" chapter.

Lastly, you need an RDBMs to support batch jobs and JDBC operations.


=== Download Spring XD on YARN binaries
In addition to the regular `spring-xd-<version>-dist.zip` files we also distribute a zip file that includes all you need to deploy on YARN. The name of this zip file is `spring-xd-<version>-yarn.zip`. You can link:http://repo.spring.io/libs-snapshot/org/springframework/xd/spring-xd/{appversion}/spring-xd-{appversion}-yarn.zip[download zip for the current release] or link:http://repo.spring.io/libs-snapshot/org/springframework/xd/spring-xd/1.0.0.BUILD-SNAPSHOT/spring-xd-1.0.0.BUILD-SNAPSHOT-yarn.zip[download snapshot build]. Unzip the downloaded file and you should see a `spring-xd-{appversion}-yarn` directory.

=== Configure your deployment
Configuration options are contained in a `spring-xd-{appversion}-yarn/config/servers.yml` file. You need to configure the hadoop settings, the transport choice plus redis/rabbit settings, the zookeeper settings and the JDBC datasource properties.

Depending on the distribution used you might need to change the `siteYarnAppClasspath` and `siteMapreduceAppClasspath`. We have provided basic settings for the supported distros, you just need to uncomment the ones for the distro you use.

These are the settings used for Hadoop 2.2.0:

[source,yaml]
----
spring:
    yarn:
        siteYarnAppClasspath: "$HADOOP_CONF_DIR,$HADOOP_COMMON_HOME/share/hadoop/common/*,$HADOOP_COMMON_HOME/share/hadoop/common/lib/*,$HADOOP_HDFS_HOME/share/hadoop/hdfs/*,$HADOOP_HDFS_HOME/share/hadoop/hdfs/lib/*,$HADOOP_YARN_HOME/share/hadoop/yarn/*,$HADOOP_YARN_HOME/share/hadoop/yarn/lib/*"
        siteMapreduceAppClasspath: "$HADOOP_MAPRED_HOME/share/hadoop/mapreduce/*,$HADOOP_MAPRED_HOME/share/hadoop/mapreduce/lib/*"

----
  

==== XD options
For Spring XD you need to define how many admin servers and containers you need. You also need to define the HDFS location (spring.yarn.applicationDir) where the Spring XD binary and config files will be stored.

[source,yaml]
----
spring:
    xd:
        adminServers: 1
        containers: 3
    yarn:
        applicationDir: /xd/app/
----

==== Hadoop settings
You need to specify the host where the YARN Resource Manager is running as well as the HDFS URL.

[source,yaml]
----
# Hadoop configuration
spring:
    hadoop:
        fsUri: hdfs://localhost:8020
        resourceManagerHost: localhost
---- 
==== Transport options
You should choose either redis (default) or rabbit as the transport and include the host and port for the choice you made.

[source,yaml]
----
# Transport used
transport: rabbit

---
# Redis properties
#spring:
#  redis:
#   port: 6379
#   host: localhost

---
# RabbitMQ properties
spring:
  rabbitmq:
   host: localhost
   port: 5672
   username: guest
   password: guest
   virtual_host: /
----

==== Zookeeper settings
You should specify the Zookeeper connection settings 

[source,yaml]
----
---
#Zookeeper properties
# client connect string: host1:port1,host2:port2,...,hostN:portN
zk:
  client:
     connect: localhost:2181
----

==== JDBC datasource properties
You should specify the JDBC connection properties based on the RDBMs that you use for the batch jobs and JDBC sink

[source,yaml]
----
---
#Config for use with MySQL - uncomment and edit with relevant values for your environment
spring:
  datasource:
    url: jdbc:mysql://yourDBhost:3306/yourDB
    username: yourUsername
    password: yourPassword
    driverClassName: com.mysql.jdbc.Driver

----

=== Push and start the jobs

Change current directory to be the directory that was unzipped (spring-xd-<version>-yarn).

==== Push the Spring XD application binaries and config to HDFS

Run the command

[source,bash]
----
./bin/xd-yarn push
----

==== Submit the Spring XD admin server

Run the command

[source,bash]
----
./bin/xd-yarn start admin
----

==== Submit the Spring XD container

Run the command

[source,bash]
----
./bin/xd-yarn start container
----

==== Check the status of the app

You can use the regular `yarn` command to check the status. Simply run:

[source,bash]
----
yarn application -list
----

You should see two applications running named xd-admin and xd-container.