== Taps

A tap acts like a source in that it occurs as the first module within a stream and can pipe its output to a sink (and/or one or more processors added to a chain before the ultimate sink), but for a tap the messages are actually those being produced by some other source.  Each tap consumes a copy of every incoming message on the target stream so it can process the same data at the same time without affecting the target stream. You may think of a tap as a "tee" stream. 

The syntax for creating a tap is:

   tap @ <target stream>

A primary use case is to perform realtime analytics at the same time as data is being ingested via its primary stream. You'll find examples of creating taps on existing streams in the link:Analytics[Analytics] section.


