=== Introduction

This chapter will show you how to execute http://www.springsource.org/spring-batch[Spring Batch] Jobs using Spring XD.

=== Setting up a simple Batch Job

==== Creating the Tasklet

We will create a very simple http://static.springsource.org/spring-batch/reference/html/configureStep.html#taskletStep[Tasklet]. The sole purpose of this Tasklet is to print out "Hello Spring XD!".

[source,xml]
----
package org.springframework.xd.dirt.plugins.job;

import org.springframework.batch.core.StepContribution;
import org.springframework.batch.core.scope.context.ChunkContext;
import org.springframework.batch.core.step.tasklet.Tasklet;
import org.springframework.batch.repeat.RepeatStatus;

public class HelloSpringXDTasklet implements Tasklet {

	@Override
	public RepeatStatus execute(StepContribution contribution,
			ChunkContext chunkContext) throws Exception {

		System.out.println("Hello Spring XD!");

		return RepeatStatus.FINISHED;
	}
}
----

Please ensure that you deploy this class as part of a Jar file to the Spring XD *${xd.home}/lib* folder. Once, you restart the container the class will be added to the classpath. 

==== Setting Up the Application Context

Under `modules/common/job`, please create the following XML Application context file named `job.xml`: 

[source,xml]
----

<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
	xmlns:int="http://www.springframework.org/schema/integration"
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xmlns:batch="http://www.springframework.org/schema/batch"
	xsi:schemaLocation="http://www.springframework.org/schema/beans
		http://www.springframework.org/schema/beans/spring-beans.xsd
		http://www.springframework.org/schema/integration
		http://www.springframework.org/schema/integration/spring-integration.xsd
		http://www.springframework.org/schema/batch
		http://www.springframework.org/schema/batch/spring-batch.xsd">

	<batch:job id="helloSpringXD">
		<batch:step id="helloSpringXDStep">
			<batch:tasklet ref="helloSpringXDTasklet" />
		</batch:step>
	</batch:job>

	<bean id="helloSpringXDTasklet" class="org.springframework.xd.dirt.plugins.job.HelloSpringXDTasklet" />

</beans>
----

=== Execute the Batch Job

In order to execute the Batch Job, several options exist:

* Execute the Batch Job Once (Immediately)
* Execute the Batch Job using an AdHoc Cron Expression
* Execute the Batch using a named Cron-Trigger

==== Execute the Batch Job Once (Immediately)

----
curl -X PUT -H 'Content-Type: text/plain' -d "job" http://localhost:8080/streams/helloSpringXD
----

==== Execute the Batch Job using an AdHoc Cron Expression

----
curl -X PUT -H 'Content-Type: text/plain' -d "job --cron='*/10 * * * * *'" http://localhost:8080/streams/helloSpringXD
----

==== Execute the Batch using a named Cron-Trigger

You can explicitly create a named Trigger using:

----
curl -X PUT -H 'Content-Type: text/plain' -d "trigger --cron='*/10 * * * * *'" http://localhost:8080/streams/mytrigger
----

The trigger will be added to the Common Context, which is shared across Plugins. Once the Trigger is created, we can reference the trigger when setting up the Batch Job:

----
curl -X PUT -H 'Content-Type: text/plain' -d "job --trigger=mytrigger" http://localhost:8080/streams/helloWorldJob
----

=== Removing Batch Jobs and Triggers 

==== Stopping and Removing the Batch Job

Batch Jobs can be deleted by executing:

----
curl -X DELETE -H 'Content-Type: text/plain' http://localhost:8080/streams/helloSpringXD
----

==== Removing the Cron Trigger

Cron Triggers can be deleted by executing:

----
curl -X DELETE -H 'Content-Type: text/plain' http://localhost:8080/streams/helloSpringXD
----

NOTE: Be advised that when removing Triggers from the Context they may still be referenced by running Batch Jobs.


 